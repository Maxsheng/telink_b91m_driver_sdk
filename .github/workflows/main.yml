name: Linux_Build

# on: [push, pull_request]
on: 
  workflow_dispatch:
    inputs:
      parameter_name:
        description: 'Description of the parameter'
        required: true
        default: 'default_value'
jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v3

#     - name: Print Hello World
#       run: |
#         echo "hello world"
#         echo "test123" > doc/test.txt
#         ls .
#     - run: cmake --version

#     - name: upload artifacts
#       uses: actions/upload-artifact@v3
#       with:
#         name: dist-without-markdown
#         path: |
#           doc
#           !doc/**/*.md
#         retention-days: 5
        
  Linux_CMake_Build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Restore Cached Toolchain
      id: Restore_Cached_Toolchain
      uses: actions/cache@v3
      with:
        path: |
          nds32le-elf-mculib-v5f
          cdt2cmake
        key: ${{ runner.os }}-nds32le-elf-mculib-v5f-${{ hashFiles('./.github/nds_toolchain_version') }}
        restore-keys: |
          ${{ runner.os }}-nds32le-elf-mculib-v5f-
     
    - if: ${{ steps.Restore_Cached_Toolchain.outputs.cache-hit != 'true' }}
      name: download and decompression toolchain
      run: |
        wget -O riscv.tar https://github.com/andestech/Andes-Development-Kit/releases/download/ast-v5_1_2-release-linux/nds32le-elf-mculib-v5f.txz
        tar xf riscv.tar
        if [ $? != 0 ]; then
          echo "download toolchain fail"
          exit 1
        fi
        
        wget -O cdt2cmake.tar http://wiki.telink-semi.cn/tools_and_sdk/others/cdt2cmake.tar    
        tar xf cdt2cmake.tar
        if [ $? != 0 ]; then
          echo "download cdt2cmake fail"
          exit 1
        fi
        
    - if: ${{ steps.Restore_Cached_Toolchain.outputs.cache-hit != 'true' }}
      name: Cache Toolchain
      uses: actions/cache@v3
      with:
        path: |
          nds32le-elf-mculib-v5f
          cdt2cmake
        key: ${{ runner.os }}-nds32le-elf-mculib-v5f-${{ hashFiles('./.github/nds_toolchain_version') }}

    - name: convert cdt2cmake
      run: |
        echo "convert cdt2cmkae"
        ./cdt2cmake -c ./project/tlsr_riscv/B92/.cproject
        ls .

    - name: cmake build
      run: |
        echo "cmake building..."
        ls . 
        cmake . -Bcmake_build -DTOOLCHAIN_PATH="`pwd`/nds32le-elf-mculib-v5f"
        cmake --build cmake_build --target GPIO_Demo

    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build_artifact
        path: |
          cmake_build/*.bin
        retention-days: 3
  # use_cache:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v3

  #   - run : ls .
    
  #   - name: Restore Cached Toolchain
  #     uses: actions/cache@v3
  #     with:
  #       path: nds32le-elf-mculib-v5f
  #       key: ${{ runner.os }}-nds32le-elf-mculib-v5f-${{ hashFiles('./.github/nds_toolchain_version') }}
  #       restore-keys: |
  #         ${{ runner.os }}-nds32le-elf-mculib-v5f-

  #   - name: Use Cached Toolchain
  #     run: |
  #       # Your steps that use the cached toolchain
  #       echo "Using cached toolchain..."
  #       ls .
  #       ls nds32le-elf-mculib-v5f
