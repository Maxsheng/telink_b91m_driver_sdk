name: Linux_Build

# on: [push, pull_request]
on: 
  workflow_dispatch:
    inputs:
      cproject:
        description: |
          'Specify the cproject path, which will be used to convert to cmake build, as follow,'
          './project/tlsr_riscv/B92/.cproject'
          './project/tlsr_riscv/B91/.cproject'
        required: false
        default: './project/tlsr_riscv/B92/.cproject'
      target:
        description: |
          'Specify cmake --target parameters, as follow,'
          'GPIO_Demo Debug_Demo I2C_Demo'
        required: false
        default: 'GPIO_Demo'
jobs:
  Linux_CMake_Build:
    runs-on: ubuntu-latest
    
    steps:
    - name: check parameters
    - run: |
        echo "cproject ${{ github.event.inputs.cproject }}"
        echo "target ${{ github.event.inputs.target }}"

    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Restore Cached Toolchain
      id: Restore_Cached_Toolchain
      uses: actions/cache@v3
      with:
        path: |
          nds32le-elf-mculib-v5f
          cdt2cmake
        key: ${{ runner.os }}-nds32le-elf-mculib-v5f-${{ hashFiles('./.github/nds_toolchain_version') }}
        restore-keys: |
          ${{ runner.os }}-nds32le-elf-mculib-v5f-
     
    - if: ${{ steps.Restore_Cached_Toolchain.outputs.cache-hit != 'true' }}
      name: download and decompression toolchain
      run: |
        wget -O riscv.tar https://github.com/andestech/Andes-Development-Kit/releases/download/ast-v5_1_2-release-linux/nds32le-elf-mculib-v5f.txz
        tar xf riscv.tar
        if [ $? != 0 ]; then
          echo "download toolchain fail"
          exit 1
        fi
        
        wget -O cdt2cmake.tar http://wiki.telink-semi.cn/tools_and_sdk/others/cdt2cmake.tar    
        tar xf cdt2cmake.tar
        if [ $? != 0 ]; then
          echo "download cdt2cmake fail"
          exit 1
        fi
        
    - if: ${{ steps.Restore_Cached_Toolchain.outputs.cache-hit != 'true' }}
      name: Cache Toolchain
      uses: actions/cache@v3
      with:
        path: |
          nds32le-elf-mculib-v5f
          cdt2cmake
        key: ${{ runner.os }}-nds32le-elf-mculib-v5f-${{ hashFiles('./.github/nds_toolchain_version') }}

    - name: convert cdt2cmake
      run: |
        echo "convert cdt2cmkae"
        ./cdt2cmake -c ./project/tlsr_riscv/B92/.cproject

    - name: cmake build
      run: |
        echo "cmake building..."
        cmake . -Bcmake_build -DTOOLCHAIN_PATH="`pwd`/nds32le-elf-mculib-v5f"
        echo "parameter_name ${{ github.event.inputs.target }}"
        cmake --build cmake_build --target "${{ github.event.inputs.target }}"

    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build_artifact
        path: |
          cmake_build/*.bin
        retention-days: 3
